apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: chaos-collector-database
  labels:
    app.kubernetes.io/name: {{ template "chaos-dashboard.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: collector-database
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "chaos-dashboard.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: collector-database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "chaos-dashboard.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: collector-database
    spec:
      containers:
        - name: collector-mysql
          image: mysql
          env:
            - name: MYSQL_DATABASE
              value: chaos_operator
            - name: MYSQL_USER
              value: root
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "true"
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
        - name: data
          persistentVolumeClaim:
            claimName: collector-mysql-pv-claim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    use chaos_operator;

    CREATE TABLE IF NOT EXISTS events (
      id INT NOT NULL AUTO_INCREMENT,
      name VARCHAR(255) NOT NULL,
      namespace VARCHAR(255) NOT NULL,
      type VARCHAR(255) NOT NULL,
      start_time DATETIME,
      end_time DATETIME,
      PRIMARY KEY(id),
      INDEX(namespace, name, type)
    );

    CREATE TABLE IF NOT EXISTS affected_namespaces (
      event_id INT NOT NULL,
      namespace VARCHAR(255) NOT NULL,
      INDEX(namespace),
      INDEX(event_id)
    );
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: collector-mysql-pv-claim
spec:
  {{- if .Values.dashboard.volume.storageClassName }}
  storageClassName: {{ .Values.dashboard.volume.storageClassName }}
  {{- end }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.dashboard.volume.storage }}
  {{- if .Values.dashboard.volume.selector }}
  selector:
    {{ .Values.dashboard.volume.selector }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: chaos-collector-database
  labels:
    app.kubernetes.io/name: {{ template "chaos-dashboard.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: collector-database
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
spec:
  selector:
    app.kubernetes.io/name: {{ template "chaos-dashboard.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: collector-database
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306